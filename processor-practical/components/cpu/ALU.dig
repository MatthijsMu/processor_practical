<?xml version="1.0" encoding="utf-8"?>
<circuit>
  <version>2</version>
  <attributes>
    <entry>
      <string>Description</string>
      <string>The Arithmetic Logic Unit (ALU) component, which can perform various operations on the provided operands, also determining the resulting flag values.</string>
    </entry>
    <entry>
      <string>Width</string>
      <int>12</int>
    </entry>
  </attributes>
  <visualElements>
    <visualElement>
      <elementName>In</elementName>
      <elementAttributes>
        <entry>
          <string>Description</string>
          <string>The value of the ALU B operand.</string>
        </entry>
        <entry>
          <string>Label</string>
          <string>B</string>
        </entry>
        <entry>
          <string>Bits</string>
          <int>32</int>
        </entry>
      </elementAttributes>
      <pos x="-1160" y="0"/>
    </visualElement>
    <visualElement>
      <elementName>In</elementName>
      <elementAttributes>
        <entry>
          <string>Description</string>
          <string>The value of the ALU A operand.</string>
        </entry>
        <entry>
          <string>Label</string>
          <string>A</string>
        </entry>
        <entry>
          <string>Bits</string>
          <int>32</int>
        </entry>
      </elementAttributes>
      <pos x="-1160" y="180"/>
    </visualElement>
    <visualElement>
      <elementName>Out</elementName>
      <elementAttributes>
        <entry>
          <string>Description</string>
          <string>The resuling value, containing the value computed by the ALU.</string>
        </entry>
        <entry>
          <string>Label</string>
          <string>Result</string>
        </entry>
        <entry>
          <string>Bits</string>
          <int>32</int>
        </entry>
      </elementAttributes>
      <pos x="440" y="260"/>
    </visualElement>
    <visualElement>
      <elementName>Out</elementName>
      <elementAttributes>
        <entry>
          <string>Description</string>
          <string>The resulting carry flag.</string>
        </entry>
        <entry>
          <string>Label</string>
          <string>Carry</string>
        </entry>
      </elementAttributes>
      <pos x="780" y="680"/>
    </visualElement>
    <visualElement>
      <elementName>Out</elementName>
      <elementAttributes>
        <entry>
          <string>Description</string>
          <string>The resulting overflow flag.</string>
        </entry>
        <entry>
          <string>Label</string>
          <string>Overflow</string>
        </entry>
      </elementAttributes>
      <pos x="500" y="960"/>
    </visualElement>
    <visualElement>
      <elementName>Out</elementName>
      <elementAttributes>
        <entry>
          <string>Description</string>
          <string>The resulting negative flag.</string>
        </entry>
        <entry>
          <string>Label</string>
          <string>Negative</string>
        </entry>
      </elementAttributes>
      <pos x="440" y="360"/>
    </visualElement>
    <visualElement>
      <elementName>Out</elementName>
      <elementAttributes>
        <entry>
          <string>Description</string>
          <string>The resulting zero flag.</string>
        </entry>
        <entry>
          <string>Label</string>
          <string>Zero</string>
        </entry>
      </elementAttributes>
      <pos x="440" y="440"/>
    </visualElement>
    <visualElement>
      <elementName>In</elementName>
      <elementAttributes>
        <entry>
          <string>Description</string>
          <string>The ALU opcode, which specifies the operation to perform.</string>
        </entry>
        <entry>
          <string>rotation</string>
          <rotation rotation="2"/>
        </entry>
        <entry>
          <string>Label</string>
          <string>Opcode</string>
        </entry>
        <entry>
          <string>Bits</string>
          <int>3</int>
        </entry>
      </elementAttributes>
      <pos x="1020" y="800"/>
    </visualElement>
    <visualElement>
      <elementName>RotateLeft.dig</elementName>
      <elementAttributes/>
      <pos x="-900" y="260"/>
    </visualElement>
    <visualElement>
      <elementName>ShiftLeft.dig</elementName>
      <elementAttributes/>
      <pos x="-900" y="0"/>
    </visualElement>
    <visualElement>
      <elementName>ShiftRight.dig</elementName>
      <elementAttributes/>
      <pos x="-900" y="120"/>
    </visualElement>
    <visualElement>
      <elementName>Testcase</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>Sub</string>
        </entry>
        <entry>
          <string>Testdata</string>
          <testData>
            <dataString>A B Opcode Result Carry Overflow Negative Zero

loop(i, 256)
    # determine random values for A and B inputs
    let a = random(1&lt;&lt;32);
    let b = random(1&lt;&lt;32);

    # compute expected Result
    let r = a + (~b &amp; 0xffffffff) + 1;

    # determine expected flags
    let c = (r) &gt;= (1&lt;&lt;32);
    let o = (((a&gt;&gt;31)&amp;1) != ((b&gt;&gt;31)&amp;1)) &amp; (((a&gt;&gt;31)&amp;1) != ((r&gt;&gt;31)&amp;1));
    let n = (r&gt;&gt;31) &amp; 1;
    let z = r=0;

    # perform subtraction, and then check Result and flags are as expected
    (a) (b) 7 (r) (c) (o) (n) (z)
end loop</dataString>
          </testData>
        </entry>
      </elementAttributes>
      <pos x="180" y="-320"/>
    </visualElement>
    <visualElement>
      <elementName>Testcase</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>Rol</string>
        </entry>
        <entry>
          <string>Testdata</string>
          <testData>
            <dataString>A B Opcode Result Carry Overflow Negative Zero

loop(i, 256)
    # determine random values for A and B inputs
    let a = random(1&lt;&lt;32);
    let b = random(1&lt;&lt;32);

    # compute expected Result
    let rot = a&amp;31;
    let r = (b &lt;&lt; rot) | (b &gt;&gt; (32-rot));

    # determine expected flags
    let c = ite(a = 0, 0, r &amp; 1);
    let o = c != ((r&gt;&gt;31)&amp;1);
    let n = (r&gt;&gt;31) &amp; 1;
    let z = r=0;

    # perform rotation, and then check Result and flags are as expected
    (a) (b) 5 (r) (c) (o) (n) (z)
end loop

loop(i, 16)
    # determine random values for inputs
    # set A to 0 to test edge case for Carry flag
    let a = 0;
    let b = random(1&lt;&lt;32);

    # compute expected Result
    let rot = a&amp;31;
    let r = (b &lt;&lt; rot) | (b &gt;&gt; (32-rot));

    # determine expected flags
    let c = ite(a = 0, 0, r &amp; 1);
    let o = c != ((r&gt;&gt;31)&amp;1);
    let n = (r&gt;&gt;31) &amp; 1;
    let z = r=0;

    # perform rotation, and then check Result and flags are as expected
    (a) (b) 5 (r) (c) (o) (n) (z)
end loop</dataString>
          </testData>
        </entry>
      </elementAttributes>
      <pos x="280" y="-320"/>
    </visualElement>
    <visualElement>
      <elementName>Testcase</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>Shr</string>
        </entry>
        <entry>
          <string>Testdata</string>
          <testData>
            <dataString>A B Opcode Result Carry Overflow Negative Zero

loop(i, 256)
    # determine random values for A and B inputs
    let a = random(1&lt;&lt;32) &amp; 0x3f;
    let b = random(1&lt;&lt;32);

    # compute expected Result
    let r = ite((a &gt;= 0 &amp; a &lt;= 32), ((b &gt;&gt; a) &amp; 0xffffffff), 0);

    # determine expected flags
    let c = ite(a = 0 | a &gt; 32, 0, (b &gt;&gt; (a-1)) &amp; 1);
    let o = (b&gt;&gt;31) &amp; 1;
    let n = (r&gt;&gt;31) &amp; 1;
    let z = r=0;

    # perform logical shift right, and then check Result and flags are as expected
    (a) (b) 4 (r) (c) (o) (n) (z)
end loop</dataString>
          </testData>
        </entry>
      </elementAttributes>
      <pos x="380" y="-320"/>
    </visualElement>
    <visualElement>
      <elementName>Testcase</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>Shl</string>
        </entry>
        <entry>
          <string>Testdata</string>
          <testData>
            <dataString>A B Opcode Result Carry Overflow Negative Zero

loop(i, 256)
    # determine random values for A and B inputs
    let a = random(1&lt;&lt;32) &amp; 0x3f;
    let b = random(1&lt;&lt;32);

    # compute expected Result
    let r = ite((a &gt;= 0 &amp; a &lt;= 32), (b &lt;&lt; a) &amp; 0xffffffff, 0);

    # determine expected flags
    let c = ite(a = 0 | a &gt; 32, 0, (b &gt;&gt; (32-a)) &amp; 1);
    let o = c != ((r&gt;&gt;31)&amp;1);
    let n = (r&gt;&gt;31) &amp; 1;
    let z = r=0;

    # perform logical shift left, and then check Result and flags are as expected
    (a) (b) 3 (r) (c) (o) (n) (z)
end loop</dataString>
          </testData>
        </entry>
      </elementAttributes>
      <pos x="480" y="-320"/>
    </visualElement>
    <visualElement>
      <elementName>Multiplexer</elementName>
      <elementAttributes>
        <entry>
          <string>Selector Bits</string>
          <int>3</int>
        </entry>
        <entry>
          <string>Bits</string>
          <int>32</int>
        </entry>
      </elementAttributes>
      <pos x="140" y="180"/>
    </visualElement>
    <visualElement>
      <elementName>Or</elementName>
      <elementAttributes>
        <entry>
          <string>Bits</string>
          <int>32</int>
        </entry>
        <entry>
          <string>wideShape</string>
          <boolean>true</boolean>
        </entry>
      </elementAttributes>
      <pos x="-900" y="-360"/>
    </visualElement>
    <visualElement>
      <elementName>Multiplexer</elementName>
      <elementAttributes>
        <entry>
          <string>Selector Bits</string>
          <int>3</int>
        </entry>
      </elementAttributes>
      <pos x="480" y="600"/>
    </visualElement>
    <visualElement>
      <elementName>Multiplexer</elementName>
      <elementAttributes>
        <entry>
          <string>Selector Bits</string>
          <int>3</int>
        </entry>
      </elementAttributes>
      <pos x="200" y="880"/>
    </visualElement>
    <visualElement>
      <elementName>Const</elementName>
      <elementAttributes>
        <entry>
          <string>Value</string>
          <long>0</long>
        </entry>
      </elementAttributes>
      <pos x="460" y="600"/>
    </visualElement>
    <visualElement>
      <elementName>Const</elementName>
      <elementAttributes>
        <entry>
          <string>Value</string>
          <long>0</long>
        </entry>
      </elementAttributes>
      <pos x="180" y="880"/>
    </visualElement>
    <visualElement>
      <elementName>XOr</elementName>
      <elementAttributes>
        <entry>
          <string>Bits</string>
          <int>32</int>
        </entry>
        <entry>
          <string>wideShape</string>
          <boolean>true</boolean>
        </entry>
      </elementAttributes>
      <pos x="-900" y="-240"/>
    </visualElement>
    <visualElement>
      <elementName>And</elementName>
      <elementAttributes>
        <entry>
          <string>Bits</string>
          <int>32</int>
        </entry>
        <entry>
          <string>wideShape</string>
          <boolean>true</boolean>
        </entry>
      </elementAttributes>
      <pos x="-900" y="-120"/>
    </visualElement>
    <visualElement>
      <elementName>Add</elementName>
      <elementAttributes>
        <entry>
          <string>Bits</string>
          <int>32</int>
        </entry>
      </elementAttributes>
      <pos x="-900" y="380"/>
    </visualElement>
    <visualElement>
      <elementName>Sub</elementName>
      <elementAttributes>
        <entry>
          <string>Bits</string>
          <int>32</int>
        </entry>
      </elementAttributes>
      <pos x="-900" y="520"/>
    </visualElement>
    <visualElement>
      <elementName>Const</elementName>
      <elementAttributes>
        <entry>
          <string>Value</string>
          <long>0</long>
        </entry>
      </elementAttributes>
      <pos x="-920" y="420"/>
    </visualElement>
    <visualElement>
      <elementName>Const</elementName>
      <elementAttributes>
        <entry>
          <string>Value</string>
          <long>0</long>
        </entry>
      </elementAttributes>
      <pos x="-920" y="560"/>
    </visualElement>
    <visualElement>
      <elementName>MSB.dig</elementName>
      <elementAttributes/>
      <pos x="360" y="360"/>
    </visualElement>
    <visualElement>
      <elementName>OverflowAdder.dig</elementName>
      <elementAttributes/>
      <pos x="-340" y="980"/>
    </visualElement>
    <visualElement>
      <elementName>Not</elementName>
      <elementAttributes/>
      <pos x="420" y="740"/>
    </visualElement>
    <visualElement>
      <elementName>Text</elementName>
      <elementAttributes>
        <entry>
          <string>Description</string>
          <string>Positive - Negative = Negative
Negative - Positive = Positive
A - B = R
A = R + B
R + B = A
A + B = R

A = R
R = A</string>
        </entry>
      </elementAttributes>
      <pos x="880" y="-80"/>
    </visualElement>
    <visualElement>
      <elementName>MSB.dig</elementName>
      <elementAttributes/>
      <pos x="-340" y="800"/>
    </visualElement>
    <visualElement>
      <elementName>XOr</elementName>
      <elementAttributes>
        <entry>
          <string>wideShape</string>
          <boolean>true</boolean>
        </entry>
      </elementAttributes>
      <pos x="-260" y="800"/>
    </visualElement>
    <visualElement>
      <elementName>MSB.dig</elementName>
      <elementAttributes/>
      <pos x="-180" y="920"/>
    </visualElement>
    <visualElement>
      <elementName>XOr</elementName>
      <elementAttributes>
        <entry>
          <string>wideShape</string>
          <boolean>true</boolean>
        </entry>
      </elementAttributes>
      <pos x="-100" y="920"/>
    </visualElement>
    <visualElement>
      <elementName>32bit_IsZero.dig</elementName>
      <elementAttributes/>
      <pos x="360" y="440"/>
    </visualElement>
    <visualElement>
      <elementName>MSB.dig</elementName>
      <elementAttributes/>
      <pos x="-80" y="860"/>
    </visualElement>
    <visualElement>
      <elementName>OverflowSubtract.dig</elementName>
      <elementAttributes/>
      <pos x="-340" y="1100"/>
    </visualElement>
  </visualElements>
  <wires>
    <wire>
      <p1 x="460" y="640"/>
      <p2 x="480" y="640"/>
    </wire>
    <wire>
      <p1 x="-1160" y="0"/>
      <p2 x="-1140" y="0"/>
    </wire>
    <wire>
      <p1 x="-840" y="0"/>
      <p2 x="-700" y="0"/>
    </wire>
    <wire>
      <p1 x="-1120" y="0"/>
      <p2 x="-900" y="0"/>
    </wire>
    <wire>
      <p1 x="-700" y="0"/>
      <p2 x="-320" y="0"/>
    </wire>
    <wire>
      <p1 x="180" y="260"/>
      <p2 x="340" y="260"/>
    </wire>
    <wire>
      <p1 x="-360" y="260"/>
      <p2 x="140" y="260"/>
    </wire>
    <wire>
      <p1 x="-840" y="260"/>
      <p2 x="-660" y="260"/>
    </wire>
    <wire>
      <p1 x="-1120" y="260"/>
      <p2 x="-900" y="260"/>
    </wire>
    <wire>
      <p1 x="340" y="260"/>
      <p2 x="440" y="260"/>
    </wire>
    <wire>
      <p1 x="-660" y="260"/>
      <p2 x="-400" y="260"/>
    </wire>
    <wire>
      <p1 x="180" y="900"/>
      <p2 x="200" y="900"/>
    </wire>
    <wire>
      <p1 x="-1120" y="520"/>
      <p2 x="-900" y="520"/>
    </wire>
    <wire>
      <p1 x="-840" y="520"/>
      <p2 x="-740" y="520"/>
    </wire>
    <wire>
      <p1 x="-740" y="520"/>
      <p2 x="-400" y="520"/>
    </wire>
    <wire>
      <p1 x="-1140" y="140"/>
      <p2 x="-900" y="140"/>
    </wire>
    <wire>
      <p1 x="-840" y="140"/>
      <p2 x="-460" y="140"/>
    </wire>
    <wire>
      <p1 x="-1140" y="400"/>
      <p2 x="-900" y="400"/>
    </wire>
    <wire>
      <p1 x="-840" y="400"/>
      <p2 x="-800" y="400"/>
    </wire>
    <wire>
      <p1 x="240" y="660"/>
      <p2 x="480" y="660"/>
    </wire>
    <wire>
      <p1 x="-1140" y="20"/>
      <p2 x="-900" y="20"/>
    </wire>
    <wire>
      <p1 x="-840" y="20"/>
      <p2 x="-720" y="20"/>
    </wire>
    <wire>
      <p1 x="-720" y="20"/>
      <p2 x="240" y="20"/>
    </wire>
    <wire>
      <p1 x="-1140" y="280"/>
      <p2 x="-900" y="280"/>
    </wire>
    <wire>
      <p1 x="-840" y="280"/>
      <p2 x="-780" y="280"/>
    </wire>
    <wire>
      <p1 x="-400" y="280"/>
      <p2 x="140" y="280"/>
    </wire>
    <wire>
      <p1 x="180" y="920"/>
      <p2 x="200" y="920"/>
    </wire>
    <wire>
      <p1 x="-120" y="920"/>
      <p2 x="-100" y="920"/>
    </wire>
    <wire>
      <p1 x="-660" y="920"/>
      <p2 x="-180" y="920"/>
    </wire>
    <wire>
      <p1 x="-1140" y="540"/>
      <p2 x="-900" y="540"/>
    </wire>
    <wire>
      <p1 x="-840" y="540"/>
      <p2 x="-820" y="540"/>
    </wire>
    <wire>
      <p1 x="500" y="800"/>
      <p2 x="980" y="800"/>
    </wire>
    <wire>
      <p1 x="-280" y="800"/>
      <p2 x="-260" y="800"/>
    </wire>
    <wire>
      <p1 x="-700" y="800"/>
      <p2 x="-340" y="800"/>
    </wire>
    <wire>
      <p1 x="980" y="800"/>
      <p2 x="1020" y="800"/>
    </wire>
    <wire>
      <p1 x="-920" y="420"/>
      <p2 x="-900" y="420"/>
    </wire>
    <wire>
      <p1 x="520" y="680"/>
      <p2 x="780" y="680"/>
    </wire>
    <wire>
      <p1 x="-460" y="680"/>
      <p2 x="480" y="680"/>
    </wire>
    <wire>
      <p1 x="-740" y="300"/>
      <p2 x="140" y="300"/>
    </wire>
    <wire>
      <p1 x="160" y="940"/>
      <p2 x="200" y="940"/>
    </wire>
    <wire>
      <p1 x="-20" y="940"/>
      <p2 x="80" y="940"/>
    </wire>
    <wire>
      <p1 x="-920" y="560"/>
      <p2 x="-900" y="560"/>
    </wire>
    <wire>
      <p1 x="-1160" y="180"/>
      <p2 x="-1120" y="180"/>
    </wire>
    <wire>
      <p1 x="-200" y="180"/>
      <p2 x="140" y="180"/>
    </wire>
    <wire>
      <p1 x="-180" y="820"/>
      <p2 x="160" y="820"/>
    </wire>
    <wire>
      <p1 x="220" y="1080"/>
      <p2 x="980" y="1080"/>
    </wire>
    <wire>
      <p1 x="420" y="440"/>
      <p2 x="440" y="440"/>
    </wire>
    <wire>
      <p1 x="340" y="440"/>
      <p2 x="360" y="440"/>
    </wire>
    <wire>
      <p1 x="-780" y="700"/>
      <p2 x="-640" y="700"/>
    </wire>
    <wire>
      <p1 x="-640" y="700"/>
      <p2 x="480" y="700"/>
    </wire>
    <wire>
      <p1 x="-1120" y="-320"/>
      <p2 x="-900" y="-320"/>
    </wire>
    <wire>
      <p1 x="240" y="960"/>
      <p2 x="500" y="960"/>
    </wire>
    <wire>
      <p1 x="120" y="960"/>
      <p2 x="200" y="960"/>
    </wire>
    <wire>
      <p1 x="-640" y="960"/>
      <p2 x="-100" y="960"/>
    </wire>
    <wire>
      <p1 x="-400" y="320"/>
      <p2 x="140" y="320"/>
    </wire>
    <wire>
      <p1 x="-1140" y="-200"/>
      <p2 x="-900" y="-200"/>
    </wire>
    <wire>
      <p1 x="-720" y="840"/>
      <p2 x="-260" y="840"/>
    </wire>
    <wire>
      <p1 x="-240" y="200"/>
      <p2 x="140" y="200"/>
    </wire>
    <wire>
      <p1 x="-1120" y="1100"/>
      <p2 x="-340" y="1100"/>
    </wire>
    <wire>
      <p1 x="-1120" y="-80"/>
      <p2 x="-900" y="-80"/>
    </wire>
    <wire>
      <p1 x="-800" y="720"/>
      <p2 x="480" y="720"/>
    </wire>
    <wire>
      <p1 x="-820" y="-340"/>
      <p2 x="-200" y="-340"/>
    </wire>
    <wire>
      <p1 x="-1140" y="980"/>
      <p2 x="-340" y="980"/>
    </wire>
    <wire>
      <p1 x="80" y="980"/>
      <p2 x="200" y="980"/>
    </wire>
    <wire>
      <p1 x="460" y="600"/>
      <p2 x="480" y="600"/>
    </wire>
    <wire>
      <p1 x="-820" y="-220"/>
      <p2 x="-240" y="-220"/>
    </wire>
    <wire>
      <p1 x="-280" y="220"/>
      <p2 x="140" y="220"/>
    </wire>
    <wire>
      <p1 x="-140" y="860"/>
      <p2 x="-80" y="860"/>
    </wire>
    <wire>
      <p1 x="-20" y="860"/>
      <p2 x="120" y="860"/>
    </wire>
    <wire>
      <p1 x="-280" y="1120"/>
      <p2 x="-220" y="1120"/>
    </wire>
    <wire>
      <p1 x="-1140" y="1120"/>
      <p2 x="-340" y="1120"/>
    </wire>
    <wire>
      <p1 x="-820" y="-100"/>
      <p2 x="-280" y="-100"/>
    </wire>
    <wire>
      <p1 x="460" y="740"/>
      <p2 x="480" y="740"/>
    </wire>
    <wire>
      <p1 x="-820" y="740"/>
      <p2 x="420" y="740"/>
    </wire>
    <wire>
      <p1 x="-1140" y="-360"/>
      <p2 x="-900" y="-360"/>
    </wire>
    <wire>
      <p1 x="420" y="360"/>
      <p2 x="440" y="360"/>
    </wire>
    <wire>
      <p1 x="340" y="360"/>
      <p2 x="360" y="360"/>
    </wire>
    <wire>
      <p1 x="-280" y="1000"/>
      <p2 x="200" y="1000"/>
    </wire>
    <wire>
      <p1 x="-1120" y="1000"/>
      <p2 x="-340" y="1000"/>
    </wire>
    <wire>
      <p1 x="460" y="620"/>
      <p2 x="480" y="620"/>
    </wire>
    <wire>
      <p1 x="-1140" y="-240"/>
      <p2 x="-900" y="-240"/>
    </wire>
    <wire>
      <p1 x="-320" y="240"/>
      <p2 x="140" y="240"/>
    </wire>
    <wire>
      <p1 x="180" y="880"/>
      <p2 x="200" y="880"/>
    </wire>
    <wire>
      <p1 x="-1140" y="880"/>
      <p2 x="-140" y="880"/>
    </wire>
    <wire>
      <p1 x="160" y="500"/>
      <p2 x="980" y="500"/>
    </wire>
    <wire>
      <p1 x="-740" y="1140"/>
      <p2 x="-340" y="1140"/>
    </wire>
    <wire>
      <p1 x="-1140" y="-120"/>
      <p2 x="-900" y="-120"/>
    </wire>
    <wire>
      <p1 x="-1120" y="120"/>
      <p2 x="-900" y="120"/>
    </wire>
    <wire>
      <p1 x="-840" y="120"/>
      <p2 x="-360" y="120"/>
    </wire>
    <wire>
      <p1 x="-1120" y="380"/>
      <p2 x="-900" y="380"/>
    </wire>
    <wire>
      <p1 x="-840" y="380"/>
      <p2 x="-760" y="380"/>
    </wire>
    <wire>
      <p1 x="-760" y="380"/>
      <p2 x="-740" y="380"/>
    </wire>
    <wire>
      <p1 x="-760" y="1020"/>
      <p2 x="-340" y="1020"/>
    </wire>
    <wire>
      <p1 x="-220" y="1020"/>
      <p2 x="200" y="1020"/>
    </wire>
    <wire>
      <p1 x="-200" y="-340"/>
      <p2 x="-200" y="180"/>
    </wire>
    <wire>
      <p1 x="-460" y="140"/>
      <p2 x="-460" y="680"/>
    </wire>
    <wire>
      <p1 x="-780" y="280"/>
      <p2 x="-780" y="700"/>
    </wire>
    <wire>
      <p1 x="-140" y="860"/>
      <p2 x="-140" y="880"/>
    </wire>
    <wire>
      <p1 x="460" y="600"/>
      <p2 x="460" y="620"/>
    </wire>
    <wire>
      <p1 x="460" y="620"/>
      <p2 x="460" y="640"/>
    </wire>
    <wire>
      <p1 x="-400" y="260"/>
      <p2 x="-400" y="280"/>
    </wire>
    <wire>
      <p1 x="-400" y="320"/>
      <p2 x="-400" y="520"/>
    </wire>
    <wire>
      <p1 x="-720" y="20"/>
      <p2 x="-720" y="840"/>
    </wire>
    <wire>
      <p1 x="80" y="940"/>
      <p2 x="80" y="980"/>
    </wire>
    <wire>
      <p1 x="-660" y="260"/>
      <p2 x="-660" y="920"/>
    </wire>
    <wire>
      <p1 x="980" y="500"/>
      <p2 x="980" y="800"/>
    </wire>
    <wire>
      <p1 x="980" y="800"/>
      <p2 x="980" y="1080"/>
    </wire>
    <wire>
      <p1 x="340" y="260"/>
      <p2 x="340" y="360"/>
    </wire>
    <wire>
      <p1 x="340" y="360"/>
      <p2 x="340" y="440"/>
    </wire>
    <wire>
      <p1 x="-280" y="-100"/>
      <p2 x="-280" y="220"/>
    </wire>
    <wire>
      <p1 x="-220" y="1020"/>
      <p2 x="-220" y="1120"/>
    </wire>
    <wire>
      <p1 x="220" y="1040"/>
      <p2 x="220" y="1080"/>
    </wire>
    <wire>
      <p1 x="-800" y="400"/>
      <p2 x="-800" y="720"/>
    </wire>
    <wire>
      <p1 x="-1120" y="-320"/>
      <p2 x="-1120" y="-80"/>
    </wire>
    <wire>
      <p1 x="-1120" y="380"/>
      <p2 x="-1120" y="520"/>
    </wire>
    <wire>
      <p1 x="-1120" y="120"/>
      <p2 x="-1120" y="180"/>
    </wire>
    <wire>
      <p1 x="-1120" y="520"/>
      <p2 x="-1120" y="1000"/>
    </wire>
    <wire>
      <p1 x="-1120" y="260"/>
      <p2 x="-1120" y="380"/>
    </wire>
    <wire>
      <p1 x="-1120" y="0"/>
      <p2 x="-1120" y="120"/>
    </wire>
    <wire>
      <p1 x="-1120" y="1000"/>
      <p2 x="-1120" y="1100"/>
    </wire>
    <wire>
      <p1 x="-1120" y="180"/>
      <p2 x="-1120" y="260"/>
    </wire>
    <wire>
      <p1 x="-1120" y="-80"/>
      <p2 x="-1120" y="0"/>
    </wire>
    <wire>
      <p1 x="160" y="340"/>
      <p2 x="160" y="500"/>
    </wire>
    <wire>
      <p1 x="160" y="820"/>
      <p2 x="160" y="940"/>
    </wire>
    <wire>
      <p1 x="-740" y="300"/>
      <p2 x="-740" y="380"/>
    </wire>
    <wire>
      <p1 x="-740" y="520"/>
      <p2 x="-740" y="1140"/>
    </wire>
    <wire>
      <p1 x="-360" y="120"/>
      <p2 x="-360" y="260"/>
    </wire>
    <wire>
      <p1 x="-240" y="-220"/>
      <p2 x="-240" y="200"/>
    </wire>
    <wire>
      <p1 x="240" y="20"/>
      <p2 x="240" y="660"/>
    </wire>
    <wire>
      <p1 x="-820" y="540"/>
      <p2 x="-820" y="740"/>
    </wire>
    <wire>
      <p1 x="-1140" y="-360"/>
      <p2 x="-1140" y="-240"/>
    </wire>
    <wire>
      <p1 x="-1140" y="0"/>
      <p2 x="-1140" y="20"/>
    </wire>
    <wire>
      <p1 x="-1140" y="980"/>
      <p2 x="-1140" y="1120"/>
    </wire>
    <wire>
      <p1 x="-1140" y="400"/>
      <p2 x="-1140" y="540"/>
    </wire>
    <wire>
      <p1 x="-1140" y="140"/>
      <p2 x="-1140" y="280"/>
    </wire>
    <wire>
      <p1 x="-1140" y="-120"/>
      <p2 x="-1140" y="0"/>
    </wire>
    <wire>
      <p1 x="-1140" y="880"/>
      <p2 x="-1140" y="980"/>
    </wire>
    <wire>
      <p1 x="-1140" y="-200"/>
      <p2 x="-1140" y="-120"/>
    </wire>
    <wire>
      <p1 x="-1140" y="540"/>
      <p2 x="-1140" y="880"/>
    </wire>
    <wire>
      <p1 x="-1140" y="280"/>
      <p2 x="-1140" y="400"/>
    </wire>
    <wire>
      <p1 x="-1140" y="20"/>
      <p2 x="-1140" y="140"/>
    </wire>
    <wire>
      <p1 x="-1140" y="-240"/>
      <p2 x="-1140" y="-200"/>
    </wire>
    <wire>
      <p1 x="180" y="880"/>
      <p2 x="180" y="900"/>
    </wire>
    <wire>
      <p1 x="180" y="900"/>
      <p2 x="180" y="920"/>
    </wire>
    <wire>
      <p1 x="500" y="760"/>
      <p2 x="500" y="800"/>
    </wire>
    <wire>
      <p1 x="-760" y="380"/>
      <p2 x="-760" y="1020"/>
    </wire>
    <wire>
      <p1 x="120" y="860"/>
      <p2 x="120" y="960"/>
    </wire>
    <wire>
      <p1 x="-700" y="0"/>
      <p2 x="-700" y="800"/>
    </wire>
    <wire>
      <p1 x="-320" y="0"/>
      <p2 x="-320" y="240"/>
    </wire>
    <wire>
      <p1 x="-640" y="700"/>
      <p2 x="-640" y="960"/>
    </wire>
  </wires>
  <measurementOrdering/>
</circuit>